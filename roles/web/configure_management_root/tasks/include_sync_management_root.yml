---
- name: "[sync_up] Get management root files"
  ibm.isam.isam:
    log: "{{ log_level | default(omit) }}"
    force: "{{ force | default(omit) }}"
    action: ibmsecurity.isam.web.reverse_proxy.management_root.file.get_all
    isamapi:
      instance_id: "{{ item.0.inst_name }}"
  register: ret_obj

- name: "[sync_up] Check local file"
  local_action:
    module: stat
    path: "{{ inventory_dir }}/{{ item.1.directory }}{{ element.path | regex_replace(item.1.target,'') }}"
  when: (element.path | regex_search('^'+item.1.target)) == item.1.target
  with_items: "{{ ret_obj.data | ibm.isam.flatten_management_root }}"
  loop_control:
    loop_var: element
    label: "{ inst_name=\"{{ item.0.inst_name }}\", path: \"{{ element.path }}\", type: \"{{ element.type }}\", name: \"{{ element.name }}\"}"
  register: locals

- name: "[sync_up] Delete missing local files on the server"
  ibm.isam.isam:
    log: "{{ log_level | default(omit) }}"
    force: "{{ force | default(omit) }}"
    action: "ibmsecurity.isam.web.reverse_proxy.management_root.{{ local.element.type }}.delete"
    isamapi:
        instance_id: "{{ item.0.inst_name }}"
        id: "{{ local.element.path }}"
  when: local.stat is defined and not local.stat.exists and (local.element.path | dirname) not in (locals.results | json_query('[? !(stat.exists)].element.path') | difference([item.1.target]))
  with_items: "{{ locals.results }}"
  loop_control:
    loop_var: local
    label: "{ instance_id=\"{{ item.0.inst_name }}\", path=\"{{ local.element.path }}\"}"

- name: "[sync_up] list of directory update items"
  set_fact:
    directory_update_item: "{{ {'mgmt_action': 'create', 'type': create.state, 'target': item.1.target +'/'+ create.path } }}"
  when: create.state == "directory"
  with_filetree: "{{ inventory_dir }}/{{ item.1.directory }}"
  loop_control:
    loop_var: create
    label: "{'mgmt_action': 'create', 'type': \"{{ create.state }}\", 'target': \"{{ item.1.target +'/'+ create.path }}\" }"
  register: directory_update_result

- name: "[sync_up] consolidate update items in a list of updates [directory]"
  set_fact:
    directory_updates: "{{ directory_update_result.results | selectattr('ansible_facts','defined') | map(attribute='ansible_facts.directory_update_item') | list }}"

- name: "[sync_up] list of file update items"
  set_fact:
    file_update_item: "{{ {'mgmt_action': 'upload', 'type': upload.state, 'target': item.1.target +'/'+ upload.path, 'file': upload.root +'/'+ upload.path} }}"
  when: upload.state == "file"
  with_filetree: "{{ inventory_dir }}/{{ item.1.directory }}"
  loop_control:
    loop_var: upload
    label: "{'mgmt_action': 'upload', 'type': \"{{ upload.state }}\", 'target': \"{{ item.1.target +'/'+ upload.path }}\", 'file': \"{{ upload.root +'/'+ upload.path }}\"}"
  register: file_update_result

- name: "[sync_up] Consolidate uptate items in a list of updates [file]"
  set_fact:
    file_updates: "{{ file_update_result.results | selectattr('ansible_facts','defined') | map(attribute='ansible_facts.file_update_item') | list }}"

- name: "[sync_up] Define dynamic management_root containing directories and files to be created/uploaded"
  set_fact:
    sync_up_management_root: "{{ directory_updates }} + {{ file_updates }}"

- name: "[sync_up] Create management root directories"
  ibm.isam.isam:
    log: "{{ log_level | default(omit) }}"
    force: "{{ force | default(omit) }}"
    action: ibmsecurity.isam.web.reverse_proxy.management_root.directory.create
    isamapi:
      instance_id: "{{ item.0.inst_name }}"
      id: "{{ sync_create.target.split('/')[0] }}"
      name: "{{ sync_create.target | regex_replace(item.1.target.split('/')[0]+'/','') }}"
  when: sync_create.mgmt_action == 'create' and sync_create.type == 'directory'
  with_items: "{{ sync_up_management_root }}"
  loop_control:
    label: "{ 'mgmt_action': \"{{ sync_create.mgmt_action }}\", 'inst_name': \"{{ item.0.inst_name }}\", 'target': \"{{ sync_create.target | default(None) }}\", 'type': \"{{ sync_create.type | default(None) }}\")"
    loop_var: sync_create
  notify: Commit Changes

- name: "[sync_up] Upload management root files"
  ibm.isam.isam:
    log: "{{ log_level | default(omit) }}"
    force: "{{ force | default(omit) }}"
    action: ibmsecurity.isam.web.reverse_proxy.management_root.file.import_file
    isamapi:
      instance_id: "{{ item.0.inst_name }}"
      id: "{{ sync_upload.target }}"
      filename: "{{ sync_upload.file if((sync_upload.file | regex_search('^/') == '/') ) else (inventory_dir +'/'+ sync_upload.file) }}"
  when: sync_upload.mgmt_action == 'upload' and sync_upload.type == 'file'
  with_items: "{{ sync_up_management_root }}"
  loop_control:
    label: "{ 'mgmt_action': \"{{ sync_upload.mgmt_action }}\", 'inst_name': \"{{ item.0.inst_name }}\", 'filename': \"{{ (sync_upload.target | basename) }}\", 'target': \"{{ (sync_upload.target | default(None)) | dirname }}\", 'type': \"{{ sync_upload.type | default(None) }}\")"
    loop_var: sync_upload
  notify: Commit Changes
